<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: google-compute-engine | Seven Story Rabbit Hole]]></title>
  <link href="http://tleyden.github.io/blog/categories/google-compute-engine/atom.xml" rel="self"/>
  <link href="http://tleyden.github.io/"/>
  <updated>2016-11-21T13:41:39-08:00</updated>
  <id>http://tleyden.github.io/</id>
  <author>
    <name><![CDATA[Traun Leyden]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Running Couchbase Sync Gateway on Google Compute Engine]]></title>
    <link href="http://tleyden.github.io/blog/2014/06/22/running-couchbase-sync-gateway-on-gce/"/>
    <updated>2014-06-22T19:10:00-07:00</updated>
    <id>http://tleyden.github.io/blog/2014/06/22/running-couchbase-sync-gateway-on-gce</id>
    <content type="html"><![CDATA[<p>First, a quick refresh of what Couchbase Sync Gateway actually <em>is</em>.</p>

<p>So here&rsquo;s a birds-eye-view of the <a href="http://developer.couchbase.com/mobile">Couchbase Mobile</a> architecture:</p>

<p><img src="https://camo.githubusercontent.com/c1aa705fde3eb12245c06730d850c23e5a84ad8d/687474703a2f2f746c657964656e2d6d6973632e73332e616d617a6f6e6177732e636f6d2f636f756368626173652d6c6974652f636f756368626173652d6c6974652d6172636869746563747572652e706e67" alt="diagram" /></p>

<p>Sync Gateway allows Couchbase Lite mobile apps to sync data between each other and the Couchbase Server running on the backend.</p>

<p>This blog post will walk you through how to run Sync Gateway in a Docker container on Google Compute Engine.</p>

<h2>Create GCE instance and ssh in</h2>

<p>Follow the instructions on <a href="http://docs.docker.com/installation/google/">Running Docker on Google Compute Engine</a>.</p>

<p>At this point you should be ssh&rsquo;d into your GCE instance</p>

<h2>Create a configuration JSON</h2>

<p>Here&rsquo;s a sample <a href="https://gist.github.com/tleyden/d97d985eb1e0725e858e">example JSON configuration</a> for Sync Gateway which uses <a href="https://github.com/couchbaselabs/walrus">walrus</a> as it&rsquo;s backing store, rather than Couchbase Server.  Later we will swap in Couchbase Server as a backing store.</p>

<h2>Run Sync Gateway docker container</h2>

<p><code>
gce:~$ sudo docker run -d -name sg -p 4984:4984 -p 4985:4985 tleyden5iwx/couchbase-sync-gateway sync_gateway "https://gist.githubusercontent.com/tleyden/d97d985eb1e0725e858e/raw"
</code></p>

<p>This will return a container id, eg <code>8ffb83fd1f</code>.</p>

<p>Check the logs to make sure there are no serious errors in the logs:</p>

<p><code>
gce:~$ sudo docker logs 8ffb83fd1f
</code></p>

<p>You should see something along the lines of:</p>

<p><code>
02:23:58.905587 Enabling logging: [REST]
02:23:58.905818 ==== Couchbase Sync Gateway/1.00 (unofficial) ====
02:23:58.905863 Opening db /sync_gateway as bucket "sync_gateway", pool "default", server &lt;walrus:/opt/sync_gateway/data&gt;
02:23:58.905964 Opening Walrus database sync_gateway on &lt;walrus:/opt/sync_gateway/data&gt;
02:23:58.909659 Starting admin server on :4985
02:23:58.913260 Starting server on :4984 ...
</code></p>

<h2>Expose API port 4984 via Firewall rule</h2>

<p>On your workstation with the <code>gcloud</code> tool installed, run:</p>

<p><code>
$ gcloud compute firewalls create sg-4984 --allow tcp:4984
</code></p>

<h2>Verify that it&rsquo;s running</h2>

<h3>Find out external ip address of instance</h3>

<p>On your workstation with the <code>gcloud</code> tool installed, run:</p>

<p><code>
$ gcloud compute instances list
name     status  zone          machineType internalIP   externalIP
couchbse RUNNING us-central1-a f1-micro    10.240.74.44 142.222.178.49
</code>
Your external ip is listed under the externalIP column, eg <code>142.222.178.49</code> in this example.</p>

<h3>Run curl request</h3>

<p>On your workstation, replace the ip below with your own ip, and run:</p>

<p><code>
$ curl http://142.222.178.49:4984
</code></p>

<p>You should get a response like:</p>

<p><code>
{"couchdb":"Welcome","vendor":{"name":"Couchbase Sync Gateway","version":1},"version":"Couchbase Sync Gateway/1.00 (unofficial)"}
</code></p>

<h2>Re-run it with Couchbase Server backing store</h2>

<p><em>OK, so we&rsquo;ve gotten it working with walrus.  But have you looked at the walrus website lately?  One <a href="https://camo.githubusercontent.com/1bd1955b96628260b27320f099aeac0585229c2f/687474703a2f2f7777772e69686173616275636b65742e636f6d2f696d616765732f77616c7275735f6275636b65742e6a7067">click</a> and it&rsquo;s pretty obvious that this thing is not exactly meant to be a scalable production ready backend, nor has it ever claimed to be.</em></p>

<p>Let&rsquo;s dump walrus for now and use Couchbase Server from this point onwards.</p>

<h3>Start Couchbase Server</h3>

<p>Before moving on, you will need to go through the instructions in <a href="http://tleyden.github.io/blog/2014/06/22/running-couchbase-server-on-gce/">Running Couchbase Server on GCE</a> in order to get a Couchbase Server instance running.</p>

<h3>Stop Sync Gateway</h3>

<p>Run this command to stop the Sync Gateway container and completely remove it, using the same container id you used earlier:</p>

<p><code>
gce:~$ sudo docker stop 8ffb83fd1f &amp;&amp; sudo docker rm 8ffb83fd1f
</code></p>

<h3>Update config</h3>

<p>Copy this <a href="https://gist.github.com/tleyden/c9e6396f7183c0f3e28c">example JSON configuration</a>, which expects a Couchbase Server running on <code>http://172.17.0.2:8091</code>, and update it with the ip address of the docker instance where your Couchbase Server is running.  To get this ip address, follow the <a href="http://tleyden.github.io/blog/2014/06/22/running-couchbase-server-on-gce/">these instructions</a> in the &ldquo;Find the Docker instance IP address&rdquo; section.</p>

<p>Now upload your modified JSON configuration to a website that is publicly accessible, for example in a <a href="http://gist.github.com">Github Gist</a>.</p>

<h3>Run Sync Gateway</h3>

<p>Run Sync Gateway again, this time using Couchbase Server as a backing store this time.</p>

<p>Replace <code>http://yourserver.co/yourconfig.json</code> with the URL where you&rsquo;ve uploaded your JSON configuration from the previous step.</p>

<p><code>
gce:~$ sudo docker run -d -name sg -p 4984:4984 -p 4985:4985 tleyden5iwx/couchbase-sync-gateway sync_gateway "http://yourserver.co/yourconfig.json"
</code></p>

<p>This will return a container id, eg <code>9ffb83fd1f</code>.  Again, check the logs to make sure there are no serious errors in the logs:</p>

<p><code>
gce:~$ sudo docker logs 9ffb83fd1f
</code></p>

<p>You should see something along the lines of:</p>

<p><code>
...
02:23:58.913260 Starting server on :4984 ...
</code></p>

<p>with no errors.</p>

<h2>Verify it&rsquo;s working</h2>

<h3>Save a document via curl</h3>

<p>The easiest way to add a document is via the Admin port, since there is no authentication to worry about.  Since we haven&rsquo;t added a firewall rule to expose the admin port (4985), (and doing so without tight filtering would be a major security hole), the following command to create a new document must be run on the GCE instance.</p>

<p><code>
gce:~$ curl -H "Content-Type: application/json" -d '{"such":"json"}' http://localhost:4985/sync_gateway/
</code></p>

<p>If it worked, you should see a response like:</p>

<p><code>
{"id":"3cbfbe43e76b7eb5c4c221a78b2cf0cc","ok":true,"rev":"1-cd809becc169215072fd567eebd8b8de"}
</code></p>

<h3>View document on Couchbase Server</h3>

<p>To verify the document was successfully stored on Couchbase Server, you&rsquo;ll need to login to the Couchbase Server Web Admin UI.  There are instructions <a href="http://tleyden.github.io/blog/2014/06/22/running-couchbase-server-on-gce/">here</a> on how to do that.</p>

<p>From there, navigate to Data Buckets / default / Documents, and you should see:</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/couchbase_server_docs.png" alt="screenshot" /></p>

<p>Click on the document that has a UUID (eg, &ldquo;29f8d7..&rdquo; in the screenshot above), and you should see the document&rsquo;s contents:</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/couchbase_server_doc.png" alt="screenshot" /></p>

<p>The <code>_sync</code> metadata field is used internally by the Sync Gateway and can be ignored.  The actual doc contents are towards the end of the file: <code>.."such":"json"}</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running a Couchbase Cluster on Google Compute Engine]]></title>
    <link href="http://tleyden.github.io/blog/2014/06/22/running-couchbase-server-on-gce/"/>
    <updated>2014-06-22T15:52:00-07:00</updated>
    <id>http://tleyden.github.io/blog/2014/06/22/running-couchbase-server-on-gce</id>
    <content type="html"><![CDATA[<p>The easiest way to run Couchbase cluster on Google Compute Engine is to run all of the nodes in Docker containers.</p>

<h2>Create GCE instance and ssh in</h2>

<p>Follow the instructions on <a href="http://docs.docker.com/installation/google/">Running Docker on Google Compute Engine</a>.</p>

<p>At this point you should be ssh&rsquo;d into your GCE instance</p>

<h2>Increase max number of files limit</h2>

<p>If you try to run Couchbase Server at this point, you will get <a href="http://stackoverflow.com/questions/24356815/running-couchbase-under-gce-docker-and-getting-error-about-max-number-of-files">this warning</a> because the file ulimit is too low.</p>

<p>Here&rsquo;s how to fix it:</p>

<ul>
<li>Edit <code>/etc/default/docker</code></li>
<li>Add a new line in the file with:</li>
</ul>


<p><code>
ulimit -n 262144
</code>
* Restart the GCE instance in the GCE web admin by going to Compute Engine / VM Instances / <your instance> and hitting the &ldquo;Reboot&rdquo; button.</p>

<p><em>Note: in theory it should be possible to just restart docker via <code>sudo service docker restart</code>, however this didn&rsquo;t work for me when I tried it, so I ended up restarting the whole GCE instance</em></p>

<h2>Start Couchbase Server</h2>

<p><code>
gce:~$ sudo docker run -d -name cb1 -p 8091:8091 -p 8092:8092 -p 11210:11210 -p 11211:11211 ncolomer/couchbase
</code></p>

<h2>Verify it&rsquo;s running</h2>

<h3>Find the Docker instance IP address</h3>

<p>On the GCE instance, run:</p>

<p><code>
gce:~$ sudo docker inspect -format '{{ .NetworkSettings.IPAddress }}' cb1
</code></p>

<p>This should return an ip address, eg <code>172.17.0.2</code></p>

<p>Set it as an environment variable so we can use it in later steps:</p>

<p><code>
gce:~$ export CB1_IP=172.17.0.2
</code></p>

<h3>Run couchbase-cli</h3>

<p>To verify that couchbase server is running, use the <code>couchbase-cli</code> to ask for server info:</p>

<p><code>
gce:~$ sudo docker run -rm ncolomer/couchbase couchbase-cli server-info -c ${CB1_IP} -u Administrator -p couchbase
</code></p>

<p>If everything is working correctly, this should return a json response, eg:</p>

<p>```
{
  &ldquo;availableStorage&rdquo;: {</p>

<pre><code>"hdd": [
  {
    "path": "/",
</code></pre>

<p>  &hellip;
}
```</p>

<h2>Start a 3-node cluster</h2>

<p>On the GCE instance, run the following commands:</p>

<p><code>
gce:~$ sudo docker run -d -name cb2 ncolomer/couchbase couchbase-start ${CB1_IP}
gce:~$ sudo docker run -d -name cb3 ncolomer/couchbase couchbase-start ${CB1_IP}
</code></p>

<p>The nodes <code>cb2</code> and <code>cb3</code> will automatically join the cluster via <code>cb1</code>. The cluster needs a rebalance to be fully operational. To do so, run the following command:</p>

<p><code>
gce:~$ sudo docker run -rm ncolomer/couchbase couchbase-cli rebalance -c ${CB1_IP} -u Administrator -p couchbase
</code></p>

<h2>Connect to admin web UI</h2>

<p>The easiest way to manage a Couchbase Server cluster is via the built-in Web Admin UI.</p>

<p>In order to access it, we will need to make some network changes.</p>

<h3>Expose port 8091 via firewall rule for your machine</h3>

<p>Go to <a href="http://www.whatismyip.com/">whatismyip.com</a> or equivalent, and find your ip address.  Eg, <code>67.161.66.7</code></p>

<p>On your workstation with the <code>gcloud</code> tool installed, run:</p>

<p><code>
$ gcloud compute firewalls create cb-8091 --allow tcp:8091 --source-ranges 67.161.66.7/32
</code></p>

<p>This will allow your machine, as well any other machine behind your internet router, to connect to the Couchbase Web UI running on GCE.</p>

<p>To increase security, you should use ipv6 and pass your workstation&rsquo;s ipv6 hostname in the <code>--source-ranges</code> parameter.</p>

<h3>Find out external ip address of instance</h3>

<p>On your workstation with the <code>gcloud</code> tool installed, run:</p>

<p><code>
$ gcloud compute instances list
name     status  zone          machineType internalIP   externalIP
couchbse RUNNING us-central1-a f1-micro    10.240.74.44 142.222.178.49
</code>
Your external ip is listed under the externalIP column, eg <code>142.222.178.49</code> in this example.</p>

<h3>Go to admin in web browser</h3>

<p>Go to <a href="http://142.222.178.49:8091">http://142.222.178.49:8091</a> into your web browser (replacing w/ your external ip)</p>

<p>You should see a screen like this:</p>

<p><img src="http://cl.ly/image/2m1i01192U0G/Screen%20Shot%202014-06-22%20at%207.07.36%20PM.png" alt="screenshot" /></p>

<p>Login with the default credentials:</p>

<ul>
<li>Username: Administrator</li>
<li>Password: couchbase</li>
</ul>


<p>And you should see the Web Admin dashboard:</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/couchbase_dashboard.png" alt="screenshot" /></p>

<h2>Increase default bucket size</h2>

<p>The default bucket size is set to a very low number by default (128M in my case).  To increase this:</p>

<ul>
<li>In Web Admin UI, go to Data Buckets / Default / Edit</li>
<li>Change Per Node RAM Quota to 1024 MB</li>
<li>Hit &ldquo;Save&rdquo; button</li>
</ul>


<h2>References</h2>

<ul>
<li><a href="https://registry.hub.docker.com/u/ncolomer/couchbase/">ncolomer/couchbase Docker instructions</a></li>
</ul>

]]></content>
  </entry>
  
</feed>

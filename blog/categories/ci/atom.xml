<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ci | Seven Story Rabbit Hole]]></title>
  <link href="http://tleyden.github.io/blog/categories/ci/atom.xml" rel="self"/>
  <link href="http://tleyden.github.io/"/>
  <updated>2017-07-05T07:18:10-07:00</updated>
  <id>http://tleyden.github.io/</id>
  <author>
    <name><![CDATA[Traun Leyden]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting up a self-hosted drone.io CI server]]></title>
    <link href="http://tleyden.github.io/blog/2016/02/15/setting-up-a-self-hosted-drone-dot-io-ci-server/"/>
    <updated>2016-02-15T19:37:00-08:00</updated>
    <id>http://tleyden.github.io/blog/2016/02/15/setting-up-a-self-hosted-drone-dot-io-ci-server</id>
    <content type="html"><![CDATA[<h2>Spin up AWS server</h2>

<ul>
<li>Ubuntu Server 14.04 LTS (HVM), SSD Volume Type &ndash; ami-fce3c696</li>
<li>m3.medium</li>
<li>250MB magnetic storage</li>
</ul>


<h2>Install docker</h2>

<p><code>ssh ubuntu@&lt;aws-instance&gt;</code> and <a href="https://docs.docker.com/engine/installation/linux/ubuntulinux/">install docker</a></p>

<h2>Register github application</h2>

<p>Go to github and <a href="https://github.com/settings/applications/new">register</a> a new OAuth application using the following values:</p>

<ul>
<li><strong>Application name</strong> Couchbase Mobile Drone CI</li>
<li><strong>Homepage URL</strong> <a href="http://ec2-54-163-185-45.compute-1.amazonaws.com">http://ec2-54-163-185-45.compute-1.amazonaws.com</a></li>
<li><strong>Application description</strong> Couchbase Mobile Drone CI</li>
<li><strong>Authorization callback URL</strong> <a href="http://ec2-54-163-185-45.compute-1.amazonaws.com/authorize">http://ec2-54-163-185-45.compute-1.amazonaws.com/authorize</a></li>
</ul>


<p>It will give you a <strong>Client ID</strong> and <strong>Client Secret</strong></p>

<h2>Create <code>/etc/drone/dronerc</code> config file</h2>

<p>On the ubuntu host:</p>

<p><code>
$ sudo mkdir /etc/drone
$ emacs /etc/drone/dronerc
</code></p>

<p><strong>Configure Remote Driver</strong></p>

<p>Add these values:</p>

<p><code>
REMOTE_DRIVER=github
REMOTE_CONFIG=https://github.com?client_id=${client_id}&amp;client_secret=${client_secret}
</code></p>

<p>and replace <code>client_id</code> and <code>client_secret</code> with the values returned from github.</p>

<p><strong>Configure Database</strong></p>

<p>Add these values:</p>

<p><code>
DATABASE_DRIVER=sqlite3
DATABASE_CONFIG=/var/lib/drone/drone.sqlite
</code></p>

<h2>Run Docker container</h2>

<p>```
sudo docker run \</p>

<pre><code>--volume /var/lib/drone:/var/lib/drone \
--volume /var/run/docker.sock:/var/run/docker.sock \
--env-file /etc/drone/dronerc \
--restart=always \
--publish=80:8000 \
--detach=true \
--name=drone \
drone/drone:0.4
</code></pre>

<p>```</p>

<p>Check the logs via <code>docker logs &lt;container-id&gt;</code> and they should look something like <a href="https://gist.github.com/tleyden/db0a894c30b4811a5deb">this</a></p>

<h2>Edit AWS security group</h2>

<p>With your instance selected, look for the security groups in the instance details:</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/drone_setup_security_group.png" alt="screenshot" /></p>

<p>Add a new inbound port with the following settings:</p>

<ul>
<li><strong>Protocol</strong> TCP</li>
<li><strong>Port Range</strong> 80</li>
<li><strong>Source</strong> 0.0.0.0</li>
</ul>


<p>It should look like this when you&rsquo;re done:</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/drone_setup_security_group2.png" alt="screenshot" /></p>

<h2>Verify it&rsquo;s running</h2>

<p>Paste the hostname of your aws instance into your browser (eg, <code>http://ec2-54-163-185-45.compute-1.amazonaws.com</code>), and you should see a page like this:</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/drone_login_screen.png" alt="screenshot" /></p>

<h2>Login</h2>

<p>If you click the login button, you should see:</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/drone_github_authorize.png" alt="screenshot" /></p>

<p>And then:</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/drone_post_github_login.png" alt="screenshot" /></p>

<h2>Activate a repository</h2>

<p>Click one of the repositories you have access to, and you should get an &ldquo;activate now&rdquo; option:</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/drone_activate_now.png" alt="screenshot" /></p>

<p>which will take you to your project home screen:</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/drone_project_home.png" alt="screenshot" /></p>

<h2>Add a <code>.drone.yml</code> file to the root of the repository</h2>

<p>In the repository you have chosen (in my case I&rsquo;m using <code>tleyden/sync_gateway</code>, which is a golang project, and may refer to it later), add a <code>.drone.yml</code> file to the root of the repository with:</p>

<p>```
build:
  image: golang
  commands:</p>

<pre><code>- go get
- go build
- go test
</code></pre>

<p>```</p>

<p>Commit your change, but do not push to github yet, that will be in the next step.</p>

<p><code>
$ git add .drone.yml
$ git commit -m "Add drone.yml"
</code></p>

<h2>Kickoff a build</h2>

<p>Now push your change up to github.</p>

<p><code>
$ git push origin master
</code></p>

<p>and in your drone UI you should see a build in progress:</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/drone_build_running.png" alt="screenshot" /></p>

<p>when it finishes, you&rsquo;ll see either a pass or a failure.  If you get a failure (which I did), it will look like this:</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/drone_build_failure.png" alt="screenshot" /></p>

<h2>Manually triggering another build</h2>

<p>In my case, the above failure was due to a dependency not building.  Since nothing else needs to be pushed to the repo to fix the build, I&rsquo;m just going to manually trigger a build.</p>

<p>On the build failure screen above, there is a <strong>Restart</strong> button, which triggers a new build.</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/drone_build_success.png" alt="screenshot" /></p>

<p>Now it works!</p>

<h2>Setup the Drone CLI</h2>

<p>I could run this on my OSX workstation, but I decided to run this on a linux docker container.  The rest of the steps assume you have spun up and are inside a linux docker container.</p>

<p><code>
$ curl http://downloads.drone.io/drone-cli/drone_linux_amd64.tar.gz | tar zx
$ install -t /usr/local/bin drone
</code></p>

<p>Go to your Profile page in the drone UI, and click <strong>Show Token</strong>.</p>

<p>Now set these environment variables</p>

<p><code>
$ export DRONE_SERVER=http://ec2-54-163-185-45.compute-1.amazonaws.com
$ export DRONE_TOKEN=eyJhbGci...
</code></p>

<p><strong>Query repos</strong></p>

<p>To test the CLI tool works, try the following commands:</p>

<p>```</p>

<h1>drone repo ls</h1>

<p>couchbase/sync_gateway
tleyden/sync_gateway</p>

<h1>drone repo info tleyden/sync_gateway</h1>

<p>tleyden/sync_gateway
```</p>
]]></content>
  </entry>
  
</feed>

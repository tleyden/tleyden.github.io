<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: nginx | Seven Story Rabbit Hole]]></title>
  <link href="http://tleyden.github.io/blog/categories/nginx/atom.xml" rel="self"/>
  <link href="http://tleyden.github.io/"/>
  <updated>2019-01-19T16:36:07-08:00</updated>
  <id>http://tleyden.github.io/</id>
  <author>
    <name><![CDATA[Traun Leyden]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Nginx proxy for Sync Gateway using Confd]]></title>
    <link href="http://tleyden.github.io/blog/2015/03/21/nginx-proxy-for-sync-gateway-using-confd/"/>
    <updated>2015-03-21T15:25:00-07:00</updated>
    <id>http://tleyden.github.io/blog/2015/03/21/nginx-proxy-for-sync-gateway-using-confd</id>
    <content type="html"><![CDATA[<p>This will walk you through setting up Sync Gateway behind nginx.  The nginx conf will be auto generated based on Sync Gateway status.</p>

<h3>Launch CoreOS instances on EC2</h3>

<p><a href="https://console.aws.amazon.com/cloudformation/home?region=us-east-1#cstack=sn%7ECouchbase-CoreOS%7Cturl%7Ehttp://tleyden-misc.s3.amazonaws.com/couchbase-coreos/sync_gateway.template"><img src="https://s3.amazonaws.com/cloudformation-examples/cloudformation-launch-stack.png"></a></p>

<p>Recommended values:</p>

<ul>
<li><strong>ClusterSize</strong>: 3 nodes (default)</li>
<li><strong>Discovery URL</strong>:  as it says, you need to grab a new token from <a href="https://discovery.etcd.io/new">https://discovery.etcd.io/new</a> and paste it in the box.</li>
<li><strong>KeyPair</strong>: the name of the AWS keypair you want to use.  If you haven&rsquo;t already, you&rsquo;ll want to upload your local ssh key into AWS and create a named keypair.</li>
</ul>


<h3>Wait until instances are up</h3>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/cloud-formation-create-complete.png" alt="screenshot" /></p>

<h3>ssh into a CoreOS instance</h3>

<p>Go to the AWS console under EC2 instances and find the public ip of one of your newly launched CoreOS instances.</p>

<p><img src="http://tleyden-misc.s3.amazonaws.com/blog_images/ec2-instances-coreos.png" alt="screenshot" /></p>

<p>Choose any one of them (it doesn&rsquo;t matter which), and ssh into it as the <strong>core</strong> user with the cert provided in the previous step:</p>

<p><code>
$ ssh -i aws.cer -A core@ec2-54-83-80-161.compute-1.amazonaws.com
</code></p>

<h2>Spin up Sync Gateway containers</h2>

<p><code>
$ etcdctl set /couchbase.com/enable-code-refresh true
$ sudo docker run --net=host tleyden5iwx/couchbase-cluster-go update-wrapper sync-gw-cluster launch-sgw --num-nodes=2 --config-url=http://git.io/hFwa --in-memory-db
</code></p>

<h2>Verify etcd entries</h2>

<p><code>
$ etcdctl ls --recursive /
...
/couchbase.com/sync-gw-node-state
/couchbase.com/sync-gw-node-state/10.169.70.114
/couchbase.com/sync-gw-node-state/10.231.220.110
</code></p>

<h2>Create data volume container</h2>

<p><code>
$ wget https://raw.githubusercontent.com/lordelph/confd-demo/master/confdata.service
$ fleetctl start confdata.service
</code></p>

<h2>Launch sync-gateway-nginx-confd.service</h2>

<p><code>
$ wget https://raw.githubusercontent.com/lordelph/confd-demo/master/confd.service
$ sed -i -e 's/lordelph\/confd-demo/tleyden5iwx\/sync-gateway-nginx-confd/' confd.service
$ fleetctl start confd.service
</code></p>

<h2>Launch nginx service</h2>

<p><code>
$ wget https://raw.githubusercontent.com/lordelph/confd-demo/master/nginx.service
$ fleetctl start nginx.service
</code></p>

<h2>Verify</h2>

<p>Try a basic http get.</p>

<p><code>
$ nginx_ip=`fleetctl list-units | grep -i nginx | awk '{print $2}' | awk -F/ '{print $2}'`
$ curl $nginx_ip
{"couchdb":"Welcome","vendor":{"name":"Couchbase Sync Gateway","version":1},"version":"Couchbase Sync Gateway/master(a47a17f)"}
</code></p>

<p>Add &lsquo;-v&rsquo; flag to see which Sync Gateway server is servicing the request</p>

<p><code>
$ curl -v $nginx_ip
...
X-Handler: 10.231.220.110:4984
...
</code></p>

<p>If you repeat that a few more times, you should see different ip addresses for the handler.</p>

<p><strong>Take a sync gateway out of rotation</strong></p>

<p><code>
$ fleetctl stop sync_gw_node@1.service sync_gw_sidekick@1.service
</code></p>

<p>Now try hitting nginx again, and should not see the Sync Gw that you just shutdown as a handler.</p>

<p><code>
$ curl -v $nginx_ip
...
X-Handler: 10.231.220.114:4984
...
</code></p>

<p><strong>Put sync gateway back into rotation</strong></p>

<p><code>
$ fleetctl start sync_gw_node@1.service sync_gw_sidekick@1.service
</code></p>

<p>Now try hitting nginx again, and should again see the Sync Gw that you just restarted as being a handler.</p>

<p><code>
$ curl -v $nginx_ip
...
X-Handler: 10.231.220.110:4984
...
</code></p>

<h2>References</h2>

<ul>
<li><a href="http://blog.dixo.net/2015/02/load-balancing-with-coreos">http://blog.dixo.net/2015/02/load-balancing-with-coreos</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
